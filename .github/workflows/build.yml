name: Build and Deploy Application

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
  workflow_dispatch:

env:
  AWS_REGION: us-east-1
  ECR_REGISTRY: 242201311297.dkr.ecr.us-east-1.amazonaws.com
  ECR_REPOSITORY: helm-deployment-app  # Change this to your ECR repo name
  AWS_ACCOUNT_ID: 242201311297

permissions:
  id-token: write
  contents: read

jobs:
  build-and-push:
    name: Build and Push to ECR
    runs-on: ubuntu-latest
    
    outputs:
      image-tag: ${{ steps.build-image.outputs.image-tag }}
      image-uri: ${{ steps.build-image.outputs.image-uri }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: arn:aws:iam::242201311297:role/GitHubActionsRole
        role-session-name: GitHub_to_AWS_via_FederatedOIDC
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      run: |
        # Generate image tag
        if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
          IMAGE_TAG="prod-${{ github.sha }}"
        else
          IMAGE_TAG="dev-${{ github.sha }}"
        fi
        
        # Build and push image
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        
        # Set outputs
        echo "image-tag=$IMAGE_TAG" >> $GITHUB_OUTPUT
        echo "image-uri=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT
        echo "Built and pushed: $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

  update-manifests:
    name: Update K8s Manifests
    runs-on: ubuntu-latest
    needs: build-and-push
    if: github.event_name == 'push'
    
    steps:
    - name: Checkout manifests repository
      uses: actions/checkout@v4
      with:
        repository: Prathameshsatyarthi123/k8s-manifests
        token: ${{ secrets.GITHUB_PAT }}
        path: k8s-manifests

    - name: Update deployment manifest
      env:
        IMAGE_TAG: ${{ needs.build-and-push.outputs.image-tag }}
        IMAGE_URI: ${{ needs.build-and-push.outputs.image-uri }}
      run: |
        cd k8s-manifests
        
        # Determine environment based on branch
        if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
          ENVIRONMENT="production"
        else
          ENVIRONMENT="staging"
        fi
        
        echo "Updating $ENVIRONMENT environment with image: $IMAGE_URI"
        
        # Update the deployment file - adjust path based on your manifest structure
        sed -i "s|image: 242201311297\.dkr\.ecr\.us-east-1\.amazonaws\.com/helm-deployment-app:.*|image: $IMAGE_URI|g" \
          environments/$ENVIRONMENT/helm-deployment/deployment.yaml
        
        # Update values.yaml if you're using Helm in ArgoCD
        if [ -f "environments/$ENVIRONMENT/helm-deployment/values.yaml" ]; then
          sed -i "s|tag: .*|tag: \"$IMAGE_TAG\"|g" environments/$ENVIRONMENT/helm-deployment/values.yaml
        fi

    - name: Commit and push changes
      run: |
        cd k8s-manifests
        
        # Determine environment
        if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
          ENVIRONMENT="production"
        else
          ENVIRONMENT="staging"
        fi
        
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"
        
        git add .
        git commit -m "Update helm-deployment image to ${{ needs.build-and-push.outputs.image-tag }} in $ENVIRONMENT" || exit 0
        git push origin main
